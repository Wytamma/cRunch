[{"name":"app.R","content":"library(shiny)\nlibrary(jqbr)\nlibrary(ggplot2)\nlibrary(bslib)\nlibrary(bsicons)\nlibrary(tools)\n\n# components\nsource(\"components/dataTable.R\")\nsource(\"components/summary.R\")\nsource(\"components/scatterPlot.R\")\nsource(\"components/histPlot.R\")\nsource(\"components/boxPlot.R\")\nsource(\"components/sidebar.R\")\n\n\n# Workaround for Chromium Issue 468227\ndownloadButton <- function(...) {\n  tag <- shiny::downloadButton(...)\n  tag$attribs$download <- NULL\n  tag\n}\n\nui <- page_navbar(\n  title = \"cRunch!\",\n  theme = bs_theme(preset = \"minty\"),\n  tags$head(\n    tags$style(HTML(\"\n        html, body {\n          height: 100vh !important;\n        }\n      \"))\n  ),\n  sidebar = sidebar(uiOutput(\"sidebar\"), width = 400),\n  nav_panel(\"Summary\", uiOutput(\"summary_panel\")),\n  nav_panel(\"Scatter\", uiOutput(\"scatter_plot\")),\n  nav_panel(\"Histogram\", uiOutput(\"hist_plot\")),\n  nav_panel(\"Box\", uiOutput(\"box_plot\")),\n  nav_panel(\"Data\", uiOutput(\"table_panel\")),\n)\n\nserver <- function(input, output, session) {\n  # Reactive expression to hold the current dataframe\n  reactive_data <- reactive({\n    if (is.null(input$file1)) {\n      return(iris)  # Default dataset if no file is uploaded\n    } else {\n      datapath <- input$file1$datapath\n      file_extension <- tolower(file_ext(datapath))\n    }\n\n    # Choose the separator based on file extension\n    separator <- ifelse(file_extension == \"tsv\", \"\\t\", \",\")\n\n    tryCatch({\n      df <- read.csv(\n        datapath,\n        header = TRUE,\n        sep = separator  # Use the determined separator\n      )\n    }, error = function(e) {\n      print(e)\n      stop(safeError(e))\n    })\n\n    df\n  })\n  # Reactive expression for the filtered data\n  filtered_data <- reactive({\n    df <- reactive_data()\n    if (is.null(input$qb))\n      return(df)  # Return unfiltered data if no filters are set\n    filter_table(data = df, filters = input$qb)  # Assuming filter_table function applies the query filters\n  })\n\n\n  output$sidebar <- renderUI({\n    sidebarComponent(input, output, session, reactive_data)\n  })\n\n\n  # Render component\n  output$table_panel <- renderUI({\n    dataTableComponent(input, output, session, filtered_data)\n  })\n\n  output$summary_panel <- renderUI({\n    summaryTableComponent(input, output, session, filtered_data)\n  })\n\n  output$scatter_plot <- renderUI({\n    scatterPlotComponent(input, output, session, filtered_data)\n  })\n\n  output$hist_plot <- renderUI({\n    histogramPlotComponent(input, output, session, filtered_data)\n  })\n\n  output$box_plot <- renderUI({\n    boxPlotComponent(input, output, session, filtered_data)\n  })\n\n}\n\nshinyApp(ui, server)\n","type":"text"},{"name":"components/boxPlot.R","content":"boxPlotComponent <-\n  function(input, output, session, filtered_data) {\n    # UI components and server logic for the box plot\n    ui <- page_fluid(\n      plotOutput(\"boxPlot\"),\n      h4(\"Box Plot customization\"),\n      layout_columns(\n        selectInput(\"boxCol\", \"Column\", choices = NULL),\n        selectInput(\n          \"boxGroupCol\",\n          \"Colour By\",\n          choices = NULL,\n          selected = \"------\"\n        ),\n        selectInput(\n          \"boxFacetCol\",\n          \"Facet By\",\n          choices = NULL,\n          selected = \"------\"\n        ),\n      ),\n      checkboxInput(\"boxOutlier\", \"Show Outliers\", value = TRUE),\n      layout_columns(\n        sliderInput(\n          \"boxLabelSize\",\n          \"Label Size\",\n          min = 8,\n          max = 20,\n          value = 12,\n          step = 1\n        ),\n        sliderInput(\n          \"boxTickSize\",\n          \"Tick Size\",\n          min = 8,\n          max = 20,\n          value = 12,\n          step = 1\n        )\n      )\n    )\n\n    # Reactive value to check if the dropdowns have been initialized\n    values <- reactiveValues(colnames = NULL)\n\n    observe({\n      df <- filtered_data()\n      colnames <- names(df)\n      if (!is.null(df) && !all(colnames %in% values$colnames)) {\n        updateSelectInput(session, \"boxCol\", choices = colnames, selected = colnames[1])\n        updateSelectInput(session, \"boxGroupCol\", choices = c(\"------\", colnames))\n        updateSelectInput(session, \"boxFacetCol\", choices = c(\"------\", colnames))\n        values$colnames <- colnames\n      }\n    })\n\n    output$boxPlot <- renderPlot({\n      req(filtered_data())  # Ensure that the reactive data object is available\n      df <- filtered_data()\n\n      # Start the plot with x and y axis\n      p <- ggplot(df, aes_string(y = input$boxCol))\n\n      # Add group color aesthetic if a group column is selected\n      if (input$boxGroupCol != \"------\" && input$boxGroupCol != \"\") {\n        p <- p + aes_string(color = input$boxGroupCol)\n      }\n\n      # Add faceting if a facet column is selected\n      if (input$boxFacetCol != \"------\" && input$boxFacetCol != \"\") {\n        p <- p + facet_wrap( ~ get(input$boxFacetCol))\n      }\n\n      # Add boxplot\n      p <- p + geom_boxplot(outlier.shape = ifelse(input$boxOutlier, 1, NA))\n\n      # Customize the plot labels and tick text sizes\n      p <-\n        p + labs(y = input$boxCol) + theme_minimal() +\n        theme(\n          text = element_text(size = input$boxLabelSize),\n          # X axis ticks\n          axis.text.y = element_text(size = input$boxTickSize),   # Y axis ticks\n          axis.title.x=element_blank(),\n          axis.text.x=element_blank(),\n          axis.ticks.x=element_blank()\n        )\n\n      # Return the final plot\n      return(p)\n    })\n\n    return(ui)\n  }\n","type":"text"},{"name":"components/dataTable.R","content":"dataTableComponent <- function(input, output, session, filtered_data) {\n  # Define the UI elements for the data table\n  ui <- DT::dataTableOutput(\"table\")\n\n  # Server logic to render the data table and calculate stats\n  output$table <- DT::renderDataTable({\n    df <- filtered_data()  # Ensure the reactive data is fetched\n    DT::datatable(df, options = list(scrollX = TRUE, paging = TRUE))\n  })\n\n  return(ui)\n}\n","type":"text"},{"name":"components/histPlot.R","content":"histogramPlotComponent <-\n  function(input, output, session, filtered_data) {\n    # UI components and server logic for the histogram plot\n    ui <- page_fluid(\n      plotOutput(\"histPlot\"),\n      h4(\"Histogram customization\"),\n      layout_columns(\n        selectInput(\"histCol\", \"Column\", choices = NULL),\n        selectInput(\n          \"histGroupCol\",\n          \"Colour By\",\n          choices = NULL,\n          selected = \"------\"\n        ),\n        selectInput(\n          \"histFacetCol\",\n          \"Facet by\",\n          choices = NULL,\n          selected = \"------\"\n        ),\n      ),\n      checkboxInput(\"histDensity\", \"Add Density Line\", value = FALSE),\n      checkboxInput(\"histShowBars\", \"Show Histogram Bars\", value = TRUE),\n      layout_columns(\n        sliderInput(\n          \"histBins\",\n          \"Number of Bins\",\n          min = 1,\n          max = 50,\n          value = 30,\n          step = 1\n        ),\n        sliderInput(\n          \"histLabelSize\",\n          \"Label Size\",\n          min = 8,\n          max = 20,\n          value = 12,\n          step = 1\n        ),\n        sliderInput(\n          \"histTickSize\",\n          \"Tick Size\",\n          min = 8,\n          max = 20,\n          value = 12,\n          step = 1\n        )\n      )\n    )\n\n    # Reactive value to initialize and update dropdowns\n    values <- reactiveValues(colnames = NULL)\n\n    observe({\n      df <- filtered_data()\n      colnames <- names(df)\n      if (!is.null(df) && !all(colnames %in% values$colnames)) {\n        updateSelectInput(session, \"histCol\", choices = colnames, selected = colnames[1])\n        updateSelectInput(session, \"histFacetCol\", choices = c(\"------\", colnames))\n        updateSelectInput(session, \"histGroupCol\", choices = c(\"------\", colnames))\n        values$colnames <- colnames\n      }\n    })\n\n    output$histPlot <- renderPlot({\n      req(filtered_data())  # Ensure that the reactive data object is available\n      df <- filtered_data()\n\n      # Check that the column is selected\n      if (is.null(input$histCol))\n        return(NULL)\n\n      # Start the plot with selected column\n      p <- ggplot(df, aes_string(x = input$histCol))\n\n      # Add group color aesthetic if a group column is selected\n      if (input$histGroupCol != \"------\" && input$histGroupCol != \"\") {\n        p <- p + aes_string(fill = input$histGroupCol)\n      }\n\n      # Add histogram with customized number of bins and toggle visibility\n      if (input$histShowBars) {\n        p <- p + geom_histogram(bins = input$histBins)\n      }\n\n      # Add density line if checked\n      if (input$histDensity) {\n        p <- p + geom_density(alpha = .2)\n      }\n\n      # Add faceting if selected\n      if (input$histFacetCol != \"------\" && input$histFacetCol != \"\") {\n        p <- p + facet_wrap(~get(input$histFacetCol))\n      }\n\n      # Customize the plot labels and tick text sizes\n      p <-\n        p + labs(x = input$histCol, y = \"Frequency\") + theme_minimal() +\n        theme(\n          text = element_text(size = input$histLabelSize),\n          axis.text.x = element_text(size = input$histTickSize),\n          axis.text.y = element_text(size = input$histTickSize)\n        )\n\n      # Return the final plot\n      return(p)\n    })\n\n    return(ui)\n  }\n","type":"text"},{"name":"components/scatterPlot.R","content":"scatterPlotComponent <-\n  function(input, output, session, filtered_data) {\n    # UI components and server logic for the scatter plot\n    ui <- page_fluid(\n      plotOutput(\"scatterPlot\"),\n      h4(\"Scatter Plot customization\"),\n      layout_columns(\n        selectInput(\"scatterXcol\", \"X-Axis\", choices = NULL),\n        selectInput(\"scatterYcol\", \"Y-Axis\", choices = NULL),\n        selectInput(\n          \"scatterGroupCol\",\n          \"Colour By\",\n          choices = NULL,\n          selected = \"------\"\n        ),\n        selectInput(\n          \"scatterFacetCol\",\n          \"Facet By\",\n          choices = NULL,\n          selected = \"------\"\n        ),\n      ),\n      checkboxInput(\"scatterSmooth\", \"Add Trendline\", value = FALSE),\n      layout_columns(\n        sliderInput(\n          \"scatterAlpha\",\n          \"Point Alpha\",\n          min = 0,\n          max = 1,\n          value = 1,\n          step = 0.1\n        ),\n        sliderInput(\n          \"scatterPointSize\",\n          \"Point Size\",\n          min = 0,\n          max = 10,\n          value = 3,\n          step = 0.5\n        ),\n        sliderInput(\n          \"scatterLabelSize\",\n          \"Label Size\",\n          min = 8,\n          max = 20,\n          value = 12,\n          step = 1\n        ),\n        sliderInput(\n          \"scatterTickSize\",\n          \"Tick Size\",\n          min = 8,\n          max = 20,\n          value = 12,\n          step = 1\n        )\n      )\n    )\n\n    # Reactive value to check if the dropdowns have been initialized\n    values <- reactiveValues(colnames = NULL)\n\n    observe({\n      df <- filtered_data()\n      colnames <- names(df)\n      if (!is.null(df) && !all(colnames %in% values$colnames)) {\n        updateSelectInput(session,\n                          \"scatterXcol\",\n                          choices = colnames,\n                          selected = colnames[1])\n        updateSelectInput(session,\n                          \"scatterYcol\",\n                          choices = colnames,\n                          selected = colnames[2])\n        updateSelectInput(session, \"scatterGroupCol\", choices = c(\"------\", colnames))\n        updateSelectInput(session, \"scatterFacetCol\", choices = c(\"------\", colnames))\n        values$colnames <- colnames\n      }\n    })\n\n    output$scatterPlot <- renderPlot({\n      req(filtered_data())  # Ensure that the reactive data object is available\n      df <- filtered_data()\n\n      # Check that the x and y columns are selected\n      if (is.null(input$scatterXcol) || is.null(input$scatterYcol))\n        return(NULL)\n\n      # Start the plot with x and y axis\n      p <- ggplot(df, aes_string(x = input$scatterXcol, y = input$scatterYcol))\n\n      # Add group color aesthetic if a group column is selected\n      if (input$scatterGroupCol != \"------\" && input$scatterGroupCol != \"\") {\n        p <- p + aes_string(color = input$scatterGroupCol)\n      }\n\n      # Add faceting if a facet column is selected\n      if (input$scatterFacetCol != \"------\" && input$scatterFacetCol != \"\") {\n        p <- p + facet_wrap( ~ get(input$scatterFacetCol))\n      }\n\n      # Add a smooth line if the checkbox is checked\n      if (input$scatterSmooth) {\n        p <- p + geom_smooth(formula = y ~ x, method = \"lm\")\n      }\n\n      # Add points with customized alpha and size\n      p <- p + geom_point(alpha = input$scatterAlpha, size = input$scatterPointSize)\n\n      # Customize the plot labels and tick text sizes\n      p <-\n        p + labs(x = input$scatterXcol, y = input$scatterYcol) + theme_minimal() +\n        theme(\n          text = element_text(size = input$scatterLabelSize),\n          axis.text.x = element_text(size = input$scatterTickSize),\n          axis.text.y = element_text(size = input$scatterTickSize)\n        )\n\n      # Return the final plot\n      return(p)\n    })\n\n    return(ui)\n  }\n","type":"text"},{"name":"components/sidebar.R","content":"sidebarComponent <- function(input, output, session, reactive_data) {\n  # Define the UI elements for the data table\n  ui <- div(\n    h4(\"Load data\"),\n    fileInput(\n      \"file1\",\n      \"Choose CSV File\",\n      multiple = FALSE,\n      accept = c(\"text/csv\", \"text/comma-separated-values,text/plain\", \".csv\")\n    ),\n    tags$hr(),\n    h4(\"Filter data\"),\n    useQueryBuilder(bs_version = \"5\"),\n    uiOutput(\"query_builder\"),\n    downloadButton(\"downloadData\", \"Download Data\"),\n    tags$hr(),\n    h4(\"Privacy\"),\n    p(\n      \"cRunch operates entirely on the client-side, meaning all computations are performed in your browser. Your data remains on your computer and is never transmitted to external servers. This ensures that cRunch is safe for handling sensitive data, as it maintains your privacy by not exposing your information beyond your local environment.\"\n    )\n    )\n\n  query_filter <- reactive({\n    df <- reactive_data()\n    req(df)\n    create_filters(df)\n  })\n\n  # Dynamic Query Builder UI\n  output$query_builder <- renderUI({\n    df <- reactive_data()\n    queryBuilderInput(\"qb\", filters = query_filter())\n  })\n\n  # Download handler for filtered data\n  output$downloadData <- downloadHandler(\n    filename = function() {\n      paste(\"cRunch-\", sub(\" \", \"T\", as.character(Sys.time())), \".csv\", sep =\n              \"\")\n    },\n    content = function(file) {\n      df_filtered <- filtered_data()  # Get the latest filtered data\n      write.csv(df_filtered, file, row.names = FALSE)\n    }\n  )\n\n  return(ui)\n}\n\ncreate_filters <- function(df) {\n  # Check the type of each column and create corresponding filter\n  filters <- lapply(names(df), function(col) {\n    col_type <- class(df[[col]])\n    if (any(col_type %in% c(\"factor\", \"character\"))) {\n      list(id = col,\n           title = col,\n           type = \"string\",\n           value_separator=\",\")\n    } else if (col_type %in% c(\"integer\", \"numeric\", \"double\")) {\n      list(\n        id = col,\n        title = col,\n        type = \"double\",\n        validation = list(\n          min = min(df[[col]], na.rm = TRUE),\n          max = max(df[[col]], na.rm = TRUE)\n        ),\n        step = 0.01\n      )\n    } else if (col_type %in% c(\"Date\", \"POSIXct\")) {\n      list(id = col,\n           title = col,\n           type = \"date\")\n    } else {\n      list(id = col,\n           title = col,\n           type = \"string\") # Default fallback\n    }\n  })\n\n  return(filters)\n}\n","type":"text"},{"name":"components/summary.R","content":"summaryTableComponent <- function(input, output, session, filtered_data) {\n  # Define the UI elements for the numeric and character data tables\n  ui <- fluidPage(\n    layout_columns(\n      value_box(\n        title = \"Rows\",\n        value = textOutput(\"number_rows\"),\n        showcase = bs_icon(\"body-text\"),\n        p(\"Number of Rows\"),\n      ),\n      value_box(\n        title = \"Columns\",\n        value = textOutput(\"number_cols\"),\n        showcase = bs_icon(\"bar-chart\"),\n        p(\"Number of Columns\"),\n      ),\n      value_box(\n        title = \"Missing\",\n        value = textOutput(\"number_missing\"),\n        showcase = bs_icon(\"x-circle\"),\n        p(\"Number of Missing Values\"),\n      )\n    ),\n    h3(\"Summary Statistics for Numeric Variables\"),\n    DT::dataTableOutput(\"numericSummary\"),\n    tags$br(),\n    h3(\"Characteristics of Categorical Variables\"),\n    DT::dataTableOutput(\"characterSummary\"),\n    tags$br()\n  )\n\n  # Server logic for numeric summaries\n  output$numericSummary <- DT::renderDataTable({\n    df <- filtered_data()\n    numeric_columns <- sapply(df, is.numeric)\n    numeric_df <- df[, numeric_columns, drop = FALSE]\n    numeric_summary <- data.frame(t(sapply(numeric_df, summary)))\n    colnames(numeric_summary) <- c(\"Min\", \"1st Qu.\", \"Median\", \"Mean\", \"3rd Qu.\", \"Max\")\n    rownames(numeric_summary) <- colnames(numeric_df)\n    DT::datatable(numeric_summary, options = list(scrollX = TRUE, paging = FALSE, searching = FALSE, info = FALSE))\n  })\n\n  # Server logic for character and factor summaries\n  output$characterSummary <- DT::renderDataTable({\n    df <- filtered_data()\n    # Treat factors as characters\n    df[] <- lapply(df, function(x) if(is.factor(x)) as.character(x) else x)\n    character_columns <- sapply(df, is.character)\n    character_df <- df[, character_columns, drop = FALSE]\n    # Update default column names based on actual character columns\n    col_names <- names(character_df)\n    # Safely calculate character summaries with error handling\n    safe_character_summaries <- tryCatch({\n      character_summaries <- lapply(names(character_df), function(col) {\n        unique_values <- unique(character_df[[col]])\n        most_common <- names(sort(table(character_df[[col]]), decreasing = TRUE))[1]\n        count_most_common <- max(table(character_df[[col]]))\n        total_unique <- length(unique_values)\n        data.frame(\n          MostCommonValue = most_common,\n          FrequencyOfMostCommon = count_most_common,\n          TotalUniqueValues = total_unique\n        )\n      })\n      all_character_summaries <- do.call(rbind, character_summaries)\n      rownames(all_character_summaries) <- col_names\n      all_character_summaries\n    }, error = function(e) {\n      # Return an empty data frame with the correct structure and row names\n      empty_df <- data.frame(\n        MostCommonValue = NA_character_,\n        FrequencyOfMostCommon = NA_integer_,\n        TotalUniqueValues = NA_integer_\n      )\n      # Set the correct number of rows based on expected column names\n      empty_df <- empty_df[rep(1, length(col_names)), , drop = FALSE]\n      rownames(empty_df) <- col_names\n      empty_df\n    })\n\n    # Render the DataTable\n    DT::datatable(safe_character_summaries, options = list(scrollX = TRUE, paging = FALSE, searching = FALSE, info = FALSE))\n  })\n\n\n  # Reactive output for number of rows\n  output$number_rows <- renderText({\n    df <- filtered_data()\n    nrow(df)\n  })\n\n  # Reactive output for number of columns\n  output$number_cols <- renderText({\n    df <- filtered_data()\n    ncol(df)\n  })\n\n  # Reactive output for number of missing values\n  output$number_missing <- renderText({\n    df <- filtered_data()\n    sum(is.na(df))\n  })\n\n  return(ui)\n}\n","type":"text"},{"name":"data/nextclade.csv","content":"\"seqName\",\"clade\",\"Nextclade_pango\",\"partiallyAliased\",\"clade_nextstrain\",\"clade_who\",\"clade_legacy\",\"qc.overallScore\",\"qc.overallStatus\"\n\"OP958840\",\"23A\",\"XBB.1.5\",\"XBB.1.5\",\"23A\",\"Omicron\",\"23A (Omicron)\",0,\"good\"\n\"OP971202\",\"23A\",\"XBB.1.5.13\",\"XBB.1.5.13\",\"23A\",\"Omicron\",\"23A (Omicron)\",0,\"good\"\n\"OP955488\",\"23A\",\"XBB.1.5\",\"XBB.1.5\",\"23A\",\"Omicron\",\"23A (Omicron)\",0,\"good\"\n\"OP971186\",\"23A\",\"XBB.1.5.13\",\"XBB.1.5.13\",\"23A\",\"Omicron\",\"23A (Omicron)\",0,\"good\"\n\"OP955486\",\"23A\",\"XBB.1.5\",\"XBB.1.5\",\"23A\",\"Omicron\",\"23A (Omicron)\",1,\"good\"\n\"OX345943\",\"22F\",\"XBB.3\",\"XBB.3\",\"22F\",\"Omicron\",\"22F (Omicron)\",0,\"good\"\n\"OX339384\",\"22E\",\"BQ.1.1\",\"BA.5.3.1.1.1.1.1.1\",\"22E\",\"Omicron\",\"22E (Omicron)\",1,\"good\"\n\"OP523232\",\"21L\",\"BA.2.3.20\",\"BA.2.3.20\",\"21L\",\"Omicron\",\"21L (Omicron)\",0,\"good\"\n\"OX245426\",\"22B\",\"BE.1.1\",\"BA.5.3.1.1.1\",\"22B\",\"Omicron\",\"22B (Omicron)\",0,\"good\"\n\"OP333110\",\"21L\",\"BH.1\",\"BA.2.38.3.1\",\"21L\",\"Omicron\",\"21L (Omicron)\",0,\"good\"\n\"OP332458\",\"21L\",\"BA.2.10.4\",\"BA.2.10.4\",\"21L\",\"Omicron\",\"21L (Omicron)\",0,\"good\"\n\"OP334332\",\"22D\",\"BM.1.1.1\",\"BA.2.75.3.1.1.1\",\"22D\",\"Omicron\",\"22D (Omicron)\",0,\"good\"\n\"OP339227\",\"22D\",\"BA.2.75.2\",\"BA.2.75.2\",\"22D\",\"Omicron\",\"22D (Omicron)\",0,\"good\"\n\"ON895103\",\"22D\",\"BA.2.75\",\"BA.2.75\",\"22D\",\"Omicron\",\"22D (Omicron)\",1,\"good\"\n\"ON895548\",\"22D\",\"BA.2.75\",\"BA.2.75\",\"22D\",\"Omicron\",\"22D (Omicron)\",1,\"good\"\n\"ON537316\",\"22C\",\"BA.2.12.1\",\"BA.2.12.1\",\"22C\",\"Omicron\",\"22C (Omicron)\",0,\"good\"\n\"ON544943\",\"21L\",\"BA.2\",\"BA.2\",\"21L\",\"Omicron\",\"21L (Omicron)\",56.25,\"mediocre\"\n\"ON629031\",\"21L\",\"BA.2\",\"BA.2\",\"21L\",\"Omicron\",\"21L (Omicron)\",89.267503,\"mediocre\"\n\"ON626380\",\"21K\",\"BA.1.1\",\"BA.1.1\",\"21K\",\"Omicron\",\"21K (Omicron)\",6.25,\"good\"\n\"ON627541\",\"22B\",\"BA.5.2\",\"BA.5.2\",\"22B\",\"Omicron\",\"22B (Omicron)\",17.361111,\"good\"\n\"ON627543\",\"22B\",\"BA.5.2\",\"BA.5.2\",\"22B\",\"Omicron\",\"22B (Omicron)\",0,\"good\"\n\"ON396327\",\"22A\",\"BA.4.1\",\"BA.4.1\",\"22A\",\"Omicron\",\"22A (Omicron)\",0,\"good\"\n\"ON544567\",\"22A\",\"BA.4.1\",\"BA.4.1\",\"22A\",\"Omicron\",\"22A (Omicron)\",0,\"good\"\n\"ON084447\",\"22C\",\"BA.2.12.1\",\"BA.2.12.1\",\"22C\",\"Omicron\",\"22C (Omicron)\",0,\"good\"\n\"IMS-10182-CVDP-83F89C70-C702-461C-BD64-53FADC5A0601\",\"22B\",\"BA.5.3\",\"BA.5.3\",\"22B\",\"Omicron\",\"22B (Omicron)\",56.25,\"mediocre\"\n\"OV950637 (XL)\",\"recombinant\",\"XL\",\"XL\",\"recombinant\",\"recombinant\",\"recombinant\",0,\"good\"\n\"OV940149 (XF)\",\"recombinant\",\"XF\",\"XF\",\"recombinant\",\"recombinant\",\"recombinant\",5.037531,\"good\"\n\"OW018845 (XE)\",\"recombinant\",\"XE\",\"XE\",\"recombinant\",\"recombinant\",\"recombinant\",1,\"good\"\n\"OM990851 (XD)\",\"recombinant\",\"XD\",\"XD\",\"recombinant\",\"recombinant\",\"recombinant\",0,\"good\"\n\"OK016320 (XB)\",\"recombinant\",\"XB\",\"XB\",\"recombinant\",\"recombinant\",\"recombinant\",6.25,\"good\"\n\"OU219033 (XA)\",\"recombinant\",\"XA\",\"XA\",\"recombinant\",\"recombinant\",\"recombinant\",1,\"good\"\n\"IMS-10004-CVDP-E64B5426-4FB5-4D41-AFEC-77D84720E886\",\"21M\",\"BA.3\",\"BA.3\",\"21M\",\"Omicron\",\"21M (Omicron)\",6.25,\"good\"\n\"USA/MA-CDCBI-CRSP_URIKNCKBF5674VF4/2021\",\"21L\",\"BA.2.9\",\"BA.2.9\",\"21L\",\"Omicron\",\"21L (Omicron)\",0,\"good\"\n\"CAN/ON-NML-249359/2021\",\"21K\",\"BA.1\",\"BA.1\",\"21K\",\"Omicron\",\"21K (Omicron)\",0,\"good\"\n\"BEL/rega-20174/2021\",\"21K\",\"BA.1\",\"BA.1\",\"21K\",\"Omicron\",\"21K (Omicron)\",0,\"good\"\n\"USA/WA-UW-2181/2020\",\"19A\",\"B\",\"B\",\"19A\",\"unassigned\",\"19A\",0,\"good\"\n\"USA/TX-CDC-ASC210279141/2021\",\"19A\",\"B\",\"B\",\"19A\",\"unassigned\",\"19A\",190.711248,\"bad\"\n\"LR991190\",\"19A\",\"B\",\"B\",\"19A\",\"unassigned\",\"19A\",5648.780466,\"bad\"\n\"USA/MD-MDH-0082/2020\",\"19B\",\"A.3\",\"A.3\",\"19B\",\"unassigned\",\"19B\",0,\"good\"\n\"USA/UNKNOWN-UW-1403/2020\",\"19B\",\"A.1\",\"A.1\",\"19B\",\"unassigned\",\"19B\",0,\"good\"\n\"USA/UT-03435/2020\",\"19B\",\"A.1\",\"A.1\",\"19B\",\"unassigned\",\"19B\",1.161605,\"good\"\n\"Switzerland/BS-UHB-42535085/2021\",\"20A\",\"B.1.36\",\"B.1.36\",\"20A\",\"unassigned\",\"20A\",2.777778,\"good\"\n\"Switzerland/SO-ETHZ-531441/2020\",\"20A\",\"B.1.160\",\"B.1.160\",\"20A\",\"unassigned\",\"20A\",0,\"good\"\n\"USA/CO-CDPHE-2007261261/2020\",\"20A\",\"B.1\",\"B.1\",\"20A\",\"unassigned\",\"20A\",460.546557,\"bad\"\n\"Switzerland/BE-ETHZ-630376/2021\",\"20B\",\"B.1.1.318\",\"B.1.1.318\",\"20B\",\"unassigned\",\"20B\",0,\"good\"\n\"USA/AK-PHL8614/2021\",\"20B\",\"B.1.1.519\",\"B.1.1.519\",\"20B\",\"unassigned\",\"20B\",0.173611,\"good\"\n\"USA/AK-PHL8565/2021\",\"20B\",\"B.1.1.519\",\"B.1.1.519\",\"20B\",\"unassigned\",\"20B\",0.694444,\"good\"\n\"USA/CA-CDC-QDX22169637/2021\",\"20C\",\"B.1.311\",\"B.1.311\",\"20C\",\"unassigned\",\"20C\",11.111111,\"good\"\n\"USA/TG278209/2020\",\"20C\",\"B.1\",\"B.1\",\"20C\",\"unassigned\",\"20C\",12.017778,\"good\"\n\"USA/CO-CDPHE-2003260110/2020\",\"20C\",\"B.1\",\"B.1\",\"20C\",\"unassigned\",\"20C\",0,\"good\"\n\"England/MILK-74F4E4/2020\",\"20D\",\"B.1.1.1\",\"B.1.1.1\",\"20D\",\"unassigned\",\"20D\",4.332565,\"good\"\n\"Switzerland/ZH-ETHZ-450502/2021\",\"20D\",\"C.35\",\"B.1.1.1.35\",\"20D\",\"unassigned\",\"20D\",6.25,\"good\"\n\"England/MILK-516E26/2020\",\"20D\",\"B.1.1.1\",\"B.1.1.1\",\"20D\",\"unassigned\",\"20D\",0.24631,\"good\"\n\"Iceland/3124/2020\",\"20E\",\"B.1.177\",\"B.1.177\",\"20E\",\"unassigned\",\"20E (EU1)\",0,\"good\"\n\"England/QEUH-AD0825/2020\",\"20E\",\"B.1.177\",\"B.1.177\",\"20E\",\"unassigned\",\"20E (EU1)\",0,\"good\"\n\"England/ALDP-1004959/2021\",\"20E\",\"B.1.177\",\"B.1.177\",\"20E\",\"unassigned\",\"20E (EU1)\",1.5625,\"good\"\n\"AUS/VIC7772/2020\",\"20F\",\"D.2\",\"B.1.1.25.2\",\"20F\",\"unassigned\",\"20F\",0,\"good\"\n\"AUS/VIC8093/2020\",\"20F\",\"D.2\",\"B.1.1.25.2\",\"20F\",\"unassigned\",\"20F\",0,\"good\"\n\"AUS/VIC10882/2020\",\"20F\",\"D.2\",\"B.1.1.25.2\",\"20F\",\"unassigned\",\"20F\",0,\"good\"\n\"USA/MA-MASPHL-01933/2021\",\"20G\",\"B.1.2\",\"B.1.2\",\"20G\",\"unassigned\",\"20G\",62.703913,\"mediocre\"\n\"USA/FL-CDC-QDX22678176/2021\",\"20G\",\"B.1.2\",\"B.1.2\",\"20G\",\"unassigned\",\"20G\",0.173611,\"good\"\n\"USA/F57FCBBEAA9D4211B7F162FE6C1B1D7F/2021\",\"20G\",\"B.1.2\",\"B.1.2\",\"20G\",\"unassigned\",\"20G\",14.0625,\"good\"\n\"OU205023\",\"20H\",\"B.1.351\",\"B.1.351\",\"20H\",\"Beta\",\"20H (Beta, V2)\",8.506944,\"good\"\n\"SYC/G38725/2021\",\"20H\",\"B.1.351\",\"B.1.351\",\"20H\",\"Beta\",\"20H (Beta, V2)\",73.723008,\"mediocre\"\n\"OU361297\",\"20H\",\"B.1.351\",\"B.1.351\",\"20H\",\"Beta\",\"20H (Beta, V2)\",51.173611,\"mediocre\"\n\"USA/MA-CDCBI-CRSP_EFLUYAQE2ICW2C6E/2021\",\"20I\",\"B.1.1.7\",\"B.1.1.7\",\"20I\",\"Alpha\",\"20I (Alpha, V1)\",50.173611,\"mediocre\"\n\"OU221273\",\"20I\",\"B.1.1.7\",\"B.1.1.7\",\"20I\",\"Alpha\",\"20I (Alpha, V1)\",6.9031,\"good\"\n\"Scotland/QEUH-14E640D/2021\",\"20I\",\"B.1.1.7\",\"B.1.1.7\",\"20I\",\"Alpha\",\"20I (Alpha, V1)\",0,\"good\"\n\"USA/AK-PHL9083/2021\",\"20J\",\"P.1\",\"B.1.1.28.1\",\"20J\",\"Gamma\",\"20J (Gamma, V3)\",0,\"good\"\n\"USA/NJ-PHEL-21-12068/2021\",\"20J\",\"P.1.10\",\"B.1.1.28.1.10\",\"20J\",\"Gamma\",\"20J (Gamma, V3)\",152.368573,\"bad\"\n\"USA/MA-CDCBI-CRSP_NPPKJNMG7V6OAGRW/2021\",\"20J\",\"P.1\",\"B.1.1.28.1\",\"20J\",\"Gamma\",\"20J (Gamma, V3)\",0.254942,\"good\"\n\"USA/AK-PHL10845/2021\",\"21A\",\"AY.54\",\"B.1.617.2.54\",\"21A\",\"Delta\",\"21A (Delta)\",0,\"good\"\n\"USA/FL-CDC-LC0099490/2021\",\"21A\",\"AY.54\",\"B.1.617.2.54\",\"21A\",\"Delta\",\"21A (Delta)\",0.003086,\"good\"\n\"IND/GBRC640a/2021\",\"21A\",\"B.1.617.2\",\"B.1.617.2\",\"21A\",\"Delta\",\"21A (Delta)\",0,\"good\"\n\"USA/IL-CDC-LC0060638/2021\",\"21B\",\"B.1.617.1\",\"B.1.617.1\",\"21B\",\"Kappa\",\"21B (Kappa)\",100,\"bad\"\n\"IND/CWS_0018_47303313/2021\",\"21B\",\"B.1.617.1\",\"B.1.617.1\",\"21B\",\"Kappa\",\"21B (Kappa)\",15.0625,\"good\"\n\"England/CAMC-13B81A4/2021\",\"21B\",\"B.1.617.1\",\"B.1.617.1\",\"21B\",\"Kappa\",\"21B (Kappa)\",25.175158,\"good\"\n\"USA/WA-S5413/2021\",\"21C\",\"B.1.427\",\"B.1.427\",\"21C\",\"Epsilon\",\"21C (Epsilon)\",36.785857,\"mediocre\"\n\"USA/CA-CDC-QDX21613057/2021\",\"21C\",\"B.1.429\",\"B.1.429\",\"21C\",\"Epsilon\",\"21C (Epsilon)\",0.173611,\"good\"\n\"USA/ID-CDC-ASC210011921/2021\",\"21C\",\"B.1.429\",\"B.1.429\",\"21C\",\"Epsilon\",\"21C (Epsilon)\",1.399962,\"good\"\n\"USA/VA-CDC-LC0067096/2021\",\"21D\",\"B.1.525\",\"B.1.525\",\"21D\",\"Eta\",\"21D (Eta)\",330.456876,\"bad\"\n\"OU149858\",\"21D\",\"B.1.525\",\"B.1.525\",\"21D\",\"Eta\",\"21D (Eta)\",2.777778,\"good\"\n\"USA/VA-CDC-LC0051792/2021\",\"21D\",\"B.1.525\",\"B.1.525\",\"21D\",\"Eta\",\"21D (Eta)\",76.760631,\"mediocre\"\n\"BHR/30005866/2021\",\"21E\",\"P.3\",\"B.1.1.28.3\",\"21E\",\"Theta\",\"21E (Theta)\",1741.052894,\"bad\"\n\"USA/NJ-CDC-LC0084532/2021\",\"21E\",\"P.3\",\"B.1.1.28.3\",\"21E\",\"Theta\",\"21E (Theta)\",69.444444,\"mediocre\"\n\"England/CAMC-139B57E/2021\",\"21E\",\"P.3\",\"B.1.1.28.3\",\"21E\",\"Theta\",\"21E (Theta)\",6.25,\"good\"\n\"USA/CA-CDPH-3000131458/2021\",\"21F\",\"B.1.526\",\"B.1.526\",\"21F\",\"Iota\",\"21F (Iota)\",43.426351,\"mediocre\"\n\"USA/NC-CDC-STM-000073018/2021\",\"21F\",\"B.1.526\",\"B.1.526\",\"21F\",\"Iota\",\"21F (Iota)\",84.027778,\"mediocre\"\n\"USA/NC-CDC-LC0050688/2021\",\"21F\",\"B.1.526\",\"B.1.526\",\"21F\",\"Iota\",\"21F (Iota)\",245.348563,\"bad\"\n\"USA/FL-CDC-LC0065484/2021\",\"21G\",\"C.37.1\",\"B.1.1.1.37.1\",\"21G\",\"Lambda\",\"21G (Lambda)\",11.111111,\"good\"\n\"OU517038\",\"21G\",\"C.37\",\"B.1.1.1.37\",\"21G\",\"Lambda\",\"21G (Lambda)\",2.777778,\"good\"\n\"USA/MA-CDCBI-CRSP_6XNVDTWZVHP437HT/2021\",\"21G\",\"C.37.1\",\"B.1.1.1.37.1\",\"21G\",\"Lambda\",\"21G (Lambda)\",1.161605,\"good\"\n\"USA/CA-CDC-FG-042304/2021\",\"21H\",\"B.1.621\",\"B.1.621\",\"21H\",\"Mu\",\"21H (Mu)\",0.01,\"good\"\n\"USA/AZ-CDC-LC0166866/2021\",\"21H\",\"B.1.621\",\"B.1.621\",\"21H\",\"Mu\",\"21H (Mu)\",4.340278,\"good\"\n\"USA/KS-CDC-2-4449463/2021\",\"21H\",\"B.1.621\",\"B.1.621\",\"21H\",\"Mu\",\"21H (Mu)\",256.173611,\"bad\"\n\"USA/FL-CDC-ASC210078123/2021\",\"21I\",\"AY.47\",\"B.1.617.2.47\",\"21I\",\"Delta\",\"21I (Delta)\",0,\"good\"\n\"OU570677\",\"21I\",\"AY.68\",\"B.1.617.2.68\",\"21I\",\"Delta\",\"21I (Delta)\",13.439561,\"good\"\n\"USA/MA-CDCBI-CRSP_M2WXUWBLS72TQFUR/2021\",\"21I\",\"AY.26\",\"B.1.617.2.26\",\"21I\",\"Delta\",\"21I (Delta)\",43.023882,\"mediocre\"\n\"USA/OKPHLCOV0000666/2021\",\"21J\",\"AY.3\",\"B.1.617.2.3\",\"21J\",\"Delta\",\"21J (Delta)\",0.001111,\"good\"\n\"USA/MA-CDCBI-CRSP_S637QBAELKOECBRG/2021\",\"21J\",\"AY.25\",\"B.1.617.2.25\",\"21J\",\"Delta\",\"21J (Delta)\",6.806341,\"good\"\n\"USA/NY-CDC-LC0344242/2021\",\"21J\",\"AY.3\",\"B.1.617.2.3\",\"21J\",\"Delta\",\"21J (Delta)\",0,\"good\"\n\"USA/VA-CDC-ASC210374497/2021\",\"21J\",\"AY.44\",\"B.1.617.2.44\",\"21J\",\"Delta\",\"21J (Delta)\",11.111111,\"good\"\n\"Scotland/QEUH-27B5322/2021\",\"21J\",\"AY.4\",\"B.1.617.2.4\",\"21J\",\"Delta\",\"21J (Delta)\",17.506944,\"good\"\n\"USA/TX-CDC-ASC210376640/2021\",\"21J\",\"AY.25\",\"B.1.617.2.25\",\"21J\",\"Delta\",\"21J (Delta)\",4.340278,\"good\"\n\"USA/MN-CDC-LC0334883/2021\",\"21J\",\"AY.83\",\"B.1.617.2.83\",\"21J\",\"Delta\",\"21J (Delta)\",4.340278,\"good\"\n\"USA/DC-CDC-LC0331077/2021\",\"21J\",\"AY.120.1\",\"B.1.617.2.120.1\",\"21J\",\"Delta\",\"21J (Delta)\",1.5625,\"good\"\n\"OU150047\",\"20I\",\"B.1.1.7\",\"B.1.1.7\",\"20I\",\"Alpha\",\"20I (Alpha, V1)\",46.006944,\"mediocre\"\n\"OU187687\",\"20I\",\"B.1.1.7\",\"B.1.1.7\",\"20I\",\"Alpha\",\"20I (Alpha, V1)\",101.5625,\"bad\"\n\"OU149610\",\"20I\",\"B.1.1.7\",\"B.1.1.7\",\"20I\",\"Alpha\",\"20I (Alpha, V1)\",8.506944,\"good\"\n\"OU125106\",\"20I\",\"B.1.1.7\",\"B.1.1.7\",\"20I\",\"Alpha\",\"20I (Alpha, V1)\",145.074078,\"bad\"\n\"USA/AR-CDC-ASC210377904/2021\",\"20A\",\"B.1.240\",\"B.1.240\",\"20A\",\"unassigned\",\"20A\",1211.111111,\"bad\"\n\"USA/NJ-CDC-ASC210001462/2021\",\"21F\",\"B.1.526\",\"B.1.526\",\"21F\",\"Iota\",\"21F (Iota)\",168.891975,\"bad\"\n\"USA/FL-CDC-ASC210334485/2021\",\"21J\",\"AY.3\",\"B.1.617.2.3\",\"21J\",\"Delta\",\"21J (Delta)\",21.006944,\"good\"\n\"USA/MA-CDCBI-CRSP_MLUB7OEWDYUWSKGQ/2021\",\"21J\",\"AY.122\",\"B.1.617.2.122\",\"21J\",\"Delta\",\"21J (Delta)\",0,\"good\"\n\"USA/CO-CDC-MMB10752210/2021\",\"21J\",\"AY.107\",\"B.1.617.2.107\",\"21J\",\"Delta\",\"21J (Delta)\",47.070744,\"mediocre\"\n\"England/ALDP-20A77A6/2021\",\"21J\",\"AY.4\",\"B.1.617.2.4\",\"21J\",\"Delta\",\"21J (Delta)\",1.173611,\"good\"\n\"USA/CO-CDC-ASC210309969/2021\",\"21J\",\"AY.103\",\"B.1.617.2.103\",\"21J\",\"Delta\",\"21J (Delta)\",0.173611,\"good\"\n\"England/MILK-2759487/2021\",\"21J\",\"AY.6\",\"B.1.617.2.6\",\"21J\",\"Delta\",\"21J (Delta)\",3.777778,\"good\"\n\"USA/RI-CDCBI-CRSP_EVAFDCVZGQ4NYXIQ/2021\",\"21J\",\"AY.103\",\"B.1.617.2.103\",\"21J\",\"Delta\",\"21J (Delta)\",4.340278,\"good\"\n\"USA/CA-CDC-FG-161774/2021\",\"21J\",\"AY.39.1\",\"B.1.617.2.39.1\",\"21J\",\"Delta\",\"21J (Delta)\",29.340278,\"good\"\n\"USA/MA-CDCBI-CRSP_6WUXOVDJ3B5G2RNQ/2021\",\"21J\",\"AY.103\",\"B.1.617.2.103\",\"21J\",\"Delta\",\"21J (Delta)\",0,\"good\"\n\"OU819939\",\"21J\",\"AY.43\",\"B.1.617.2.43\",\"21J\",\"Delta\",\"21J (Delta)\",17.300278,\"good\"\n","type":"text"}]
